#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["blackJackTable", "ace_diamonds_2", "cardSleeve"]
    def "blackJackTable" (
        active = true
        references = @blackJackTable.usdz@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "ace_diamonds_2" (
        active = true
        customData = {
            float3 rotationEulerHint = (1.8940728e-8, -1.1867024e-7, 6.2366333)
        }
        references = @ace_diamonds.usdz@
    )
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (-0.9997291, -8.086847e-9, 5.953946e-8, 0.023273773)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.09461451, 0.8344626, -0.3384571)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Cube "cardSleeve" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0.00016236305, 3.150491, -0.01824665)
        }
    )
    {
        rel material:binding = </Root/cardSleeve/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (-0.0044498486, 0.009122777, 0.9999485, -0.000040593022)
        float3 xformOp:scale = (0.285, 0.025, 0.45)
        float3 xformOp:translate = (-0.1521518, 0.8344893, -0.33442205)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/cardSleeve/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:opacity = 0.5
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }
}

